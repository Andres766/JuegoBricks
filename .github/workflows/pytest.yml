name: CI - Ejecución de Pruebas Unitarias con Pytest (🧪)
run-name: Ejecutar pruebas unitarias con Pytest en Python (🧪)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar el repositorio y obtener el código fuente
        uses: actions/checkout@v3

      - name: 🔧 Configurar entorno de Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Instalar dependencias del proyecto
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest-html pdfkit

      - name: 📦 Instalar wkhtmltopdf para conversión a PDF
        run: sudo apt-get update && sudo apt-get install -y wkhtmltopdf

      - name: 🛠️ Verificar instalación de wkhtmltopdf
        run: |
          which wkhtmltopdf
          wkhtmltopdf --version

      - name: 🛠️ Generar archivo de pruebas unitarias si no existe
        run: python generate_tests.py

      - name: 🧪 Ejecutar pruebas unitarias con Pytest y generar HTML
        run: |
          PYTHONPATH=. pytest -v --disable-warnings --html=report.html
          echo "✅ Pruebas ejecutadas, verificando existencia de report.html"
          ls -lah

      
      - name: 🛠️ Verificar existencia de report.html
        run: |
          if [ -f "report.html" ]; then
            echo "✅ report.html existe.";
          else
            echo "❌ Error: report.html no se generó. Abortando...";
            exit 1;
          fi


      - name: 🖨️ Convertir reporte HTML a PDF
        run: |
          python -c "
          import pdfkit, os;
          path = os.path.abspath('report.html');
          print(f'📄 Intentando convertir {path} a PDF...');
          if not os.path.exists(path):
              raise FileNotFoundError(f'❌ Error: {path} no fue encontrado');
          pdfkit.from_file(path, 'report.pdf', configuration=pdfkit.configuration(wkhtmltopdf='/usr/bin/wkhtmltopdf'))"

      - name: 🚀 Notificar en Pull Request sobre nueva prueba generada
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              github.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "⚠️ Se ha generado un nuevo template de prueba unitaria. **Por favor, revisa y ejecuta las pruebas antes de continuar con la integración.** 🚀"
              })       

      - name: 📤 Subir reporte de pruebas en PDF a GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-pdf
          path: report.pdf
